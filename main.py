from timeit import default_timer as timer

from fspy import datasets
import torch
"""
means = [0.3646220266819, -0.12901149690151215, -0.3486635088920593, 0.06079424172639847, -0.19199144840240479, 0.14718393981456757, -0.10124927014112473, 0.056237030774354935, -0.12648221850395203, 0.0056220972910523415, -6.246952056884766, 1.326446533203125, -1.9940946102142334, 0.010155812837183475, 0.22122584283351898, 0.6554552912712097, 3.804647445678711, -0.20495575666427612, -0.11276846379041672, -0.152302086353302, -0.5919431447982788, 0.0, -0.16494649648666382, 0.02504231035709381, -0.2056206315755844, 0.24687844514846802, 0.005885804072022438, 0.16452735662460327, 0.0005785609246231616, 0.0012527500512078404, 0.0009362231357954443, 0.0017258265288546681, 0.0010440407786518335, 0.0020929058082401752, 0.30502206087112427, 0.01441951747983694, -3.2127296924591064, 4.255568981170654, 4.148990631103516, 2.5384910106658936, 0.024932732805609703, 0.11576692759990692, 0.058198511600494385, 23.98969078063965, 43.504173278808594, 19.514474868774414, 0.814070999622345, 1121.6937255859375, 1267.5986328125, 6.0704874992370605, 6.860204219818115]

stds = [0.0022501307539641857, 0.010720093734562397, 0.017128052189946175, 0.003570288186892867, 0.01902364380657673, 0.00016130936273839325, 0.0020896256901323795, 0.003959453199058771, 0.0026608281768858433, 0.0010011127451434731, 0.03161926195025444, 0.019841568544507027, 0.024683013558387756, 9.926743223331869e-05, 0.005133772734552622, 0.005716562271118164, 0.042839355766773224, 0.005751186981797218, 0.002300974680110812, 0.0062540993094444275, 0.0019432619446888566, 1, 0.003970241639763117, 0.0030052296351641417, 0.006764660123735666, 0.027112005278468132, 0.016953663900494576, 0.032243892550468445, 9.025861800182611e-05, 1.2257953130756505e-05, 1.134760350396391e-05, 3.968709279433824e-05, 3.358755202498287e-05, 1.1103375982202124e-05, 0.00027969118673354387, 1.3221831068221945e-05, 0.03409760072827339, 0.06428848952054977, 0.06670291721820831, 0.060293398797512054, 5.003824480809271e-05, 0.001375079620629549, 0.0003301195101812482, 0.4271053969860077, 0.32550328969955444, 0.37852853536605835, 0.027826182544231415, 23.744712829589844, 26.0528507232666, 0.0914175733923912, 0.10369189828634262]


maxes = [0.37109240889549255, -0.10047601163387299, -0.30992960929870605, 0.06929907202720642, -0.14263969659805298, 0.14768606424331665, -0.09651999920606613, 0.06763243675231934, -0.11868862062692642, 0.008600421249866486, -6.160073280334473, 1.3825632333755493, -1.9281307458877563, 0.010439667850732803, 0.2370510697364807, 0.6745843291282654, 3.9022369384765625, -0.18747732043266296, -0.1065400019288063, -0.1337270736694336, -0.5848020315170288, 0.0, -0.15286701917648315, 0.03254370391368866, -0.18779246509075165, 0.3226325809955597, 0.05121304467320442, 0.2481640726327896, 0.0008443777915090322, 0.0012927716597914696, 0.0009713747422210872, 0.0018301333766430616, 0.001128802658058703, 0.0021232888102531433, 0.3055555522441864, 0.014444444328546524, -3.118746280670166, 4.428159713745117, 4.329748153686523, 2.692964792251587, 0.025079956278204918, 0.12073847651481628, 0.059313997626304626, 25.14789581298828, 44.43482208251953, 20.760011672973633, 0.8958820700645447, 1210.673095703125, 1364.808349609375, 6.33665657043457, 7.1578850746154785]

mins = [0.3592531681060791, -0.1598411500453949, -0.3879879415035248, 0.05370379984378815, -0.24860359728336334, 0.146665558218956, -0.10699423402547836, 0.04631684347987175, -0.13380049169063568, 0.003471911186352372, -6.3368449211120605, 1.2692514657974243, -2.073744535446167, 0.009836510755121708, 0.20813141763210297, 0.6404128074645996, 3.6790406703948975, -0.2204776257276535, -0.11785037815570831, -0.17008145153522491, -0.6000013947486877, 0.0, -0.1757809817790985, 0.016087444499135017, -0.22373053431510925, 0.18197809159755707, -0.037303946912288666, 0.08088444173336029, 0.0003410864737816155, 0.0012110865209251642, 0.0009066666825674474, 0.0016268513863906264, 0.0009372666827403009, 0.0020598226692527533, 0.3048780560493469, 0.014412417076528072, -3.350438356399536, 4.078488826751709, 3.963942527770996, 2.342594623565674, 0.02480221726000309, 0.11119315028190613, 0.057267673313617706, 22.86969757080078, 42.58730697631836, 18.543622970581055, 0.7467652559280396, 1060.9215087890625, 1201.6781005859375, 5.839357852935791, 6.593142032623291]
"""

means = [0.36132812, -0.18362978, -0.2609472, -0.011711046, -0.14704594, 0.20293315, -0.2211219, 0.058008943, -0.2889083, 0.000929736, -6.0549464, 1.1501467, -1.9565673, 0.009417249, 0.19509548, 0.64073855, 3.7205496, -0.2194902, -0.25165448, -0.1369454, -0.4740346, -0.0018760378, -0.15716206, 0.01649187, -0.20789225, 0.14971471, 0.016226253, 0.34321892, 0.00019115624, 0.0024928513, 0.0016194694, 0.003240662, 0.0023655521, 0.0036999201, 0.24966823, -0.0057175937, -3.218778, 3.5829666, 3.8623602, 3.0617898, 0.045201343, 0.15691684, 0.099089146, 23.320486, 43.224705, 19.904219, 0.85405326, 960.46765, 1085.4397, 5.972388, 6.7493296]

stds = [0.0036090922, 0.02022542, 0.023963477, 0.004343417, 0.037291214, 0.0004912744, 0.020365378, 0.007191979, 0.029178038, 0.0008471238, 0.05779879, 0.04134115, 0.035748612, 0.00023988601, 0.008028393, 0.018142914, 0.042620797, 0.009375848, 0.0043397155, 0.014349397, 0.0046273107, 0.0010060108, 0.0057063107, 0.0029908596, 0.009512595, 0.026696993, 0.03005453, 0.033815008, 7.689214e-05, 7.2193325e-05, 4.970579e-05, 0.00011266323, 0.00019252853, 6.359036e-05, 0.0004530969, 1.037619e-05, 0.087631255, 0.11019374, 0.16035724, 0.1289077, 0.0001392177, 0.0028660682, 0.001292629, 0.3862341, 0.5297735, 0.39397776, 0.022898437, 32.88565, 37.62684, 0.08744915, 0.094483085]

def transform(observation, label):
    mean = torch.tensor(means, dtype=torch.float)
    std = torch.tensor(means, dtype=torch.float)
    observation = (observation - mean) / std
    observation[21] = 0
    return observation, label

train_dataset = datasets.Lactamase("data/lactamase/processed/train.csv", transform=transform)
test_dataset = datasets.Lactamase("data/lactamase/processed/test.csv", transform=transform)

from fspy import models


from fspy import training
from fspy import utils
from fspy import algorithms
import numpy as np

for m in [i * 5 for i in range(1, 11)]:
    print("Running", m)
    ranking = algorithms.ccm_rank(train_dataset, m, 0.1)
    selected = set(np.argsort(ranking)[:m])
    yeet = {i for i in range(51)} - selected
    dataset = utils.eliminate(train_dataset, yeet)
    model = models.LogisticRegressionModel(m)
    training.train(model, dataset, num_epochs=500)
    test = utils.eliminate(test_dataset, yeet)
    training.test(model, test)


